apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  creationTimestamp: null
  generation: 4
  labels:
    app: logdna-agent
  name: logdna-agent
spec:
  selector:
    matchLabels:
      app: logdna-agent
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: logdna-agent
    spec:
      containers:
      - env:
        - name: LOGDNA_AGENT_KEY
          valueFrom:
            secretKeyRef:
              key: logdna-agent-key
              name: logdna-agent-key
        - name: LOGDNA_PLATFORM
          value: k8s
        - name: USEJOURNALD
          value: files
        #- name: LOGDNA_TAGS
        #  value: production,cluster1,othertags
        image: logdna/logdna-agent:latest
        imagePullPolicy: Always
        name: logdna-agent
        resources:
          limits:
            memory: 500Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /mnt
          name: mnt
          readOnly: true
        - mountPath: /var/run/docker.sock
          name: docker
        - mountPath: /etc/os-release
          name: osrelease
        - mountPath: /etc/logdna-hostname
          name: logdnahostname
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: logdna-agent
      serviceAccountName: logdna-agent
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /mnt
        name: mnt
      - hostPath:
          path: /var/run/docker.sock
        name: docker
      - hostPath:
          path: /etc/os-release
        name: osrelease
      - hostPath:
          path: /etc/hostname
        name: logdnahostname
  updateStrategy:
    type: OnDelete
