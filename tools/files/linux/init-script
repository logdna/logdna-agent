#!/bin/bash
### BEGIN INIT INFO
# Provides:          logdna-agent
# Required-Start:    $remote_fs $network $syslog
# Required-Stop:     $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts LogDNA Agent at boot
# Description:       Enables LogDNA Agent service.
### END INIT INFO

if [ $(id -u) -ne 0 ]; then
    echo "Error: This program can only be used by the root user."
    exit 1
fi

name="logdna-agent"
cmd="/usr/bin/logdna-agent"
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
conf_file="/etc/logdna.conf"

if [ -f /etc/sysconfig/$name ]; then
    . /etc/sysconfig/$name
fi

get_pid() {
    cat "$pid_file"
}

rm_pid_file() {
    if [ -f "$pid_file" ]; then
        rm "$pid_file"
    fi
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

wait_for_exit() {
    for i in {1..10}
    do
        if ! is_running; then
            break
        fi

        echo -n "."
        sleep 1
    done
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        if [ ! -f "$conf_file" ]; then
            echo "Error: LogDNA Ingestion Key not set! Use $name -k to set or $name -h for help."
            exit 1
        fi

        chmod 0644 /etc/logrotate.d/logdna-agent > /dev/null 2>&1

        echo "Starting $name..."
        $cmd >> "$stdout_log" 2>&1 &
        echo $! > "$pid_file"
        if ! is_running; then
            echo "Unable to start"
            echo "Unable to start" >> $stdout_log
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name..."
        kill `get_pid`
        wait_for_exit
        echo

        if is_running; then
            msg="Not stopped; may still be shutting down or shutdown may have failed, sending SIGKILL"
            echo "$msg"
            echo "$msg" >> $stdout_log
            kill -9 `get_pid`
            wait_for_exit
            if is_running; then
                msg="Failed to stop service"
                echo "$msg"
                echo "$msg" >> $stdout_log
                exit 1
            else
                msg="Stopped using SIGKILL"
                echo "$msg"
                echo "$msg" >> $stdout_log
                rm_pid_file
            fi
        else
            echo "Stopped"
            rm_pid_file
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
