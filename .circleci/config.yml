version: 2.1
executors:
  docker-publisher:
    environment:
      ICR_IMAGE_NAME: icr.io/ext/logdna-agent
      IMAGE_NAME: logdna/logdna-agent
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run: npm install
      - run: npm run lint
      - run: npm run test
  image-build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set Environment Variables
          command: |
            MAJOR_VERSION=1.
            DOCKER_TAG=$(wget -q https://registry.hub.docker.com/v1/repositories/logdna/logdna-agent/tags -O - | jq -r '.[] | .name' | awk '!/-/ && /\./ { print $1}' | grep ${MAJOR_VERSION} | tail -1)
            if [[ ${CIRCLE_TAG} == 1.* ]]; then
              IMAGE_TAG=${CIRCLE_TAG}
            else
              IMAGE_TAG=${DOCKER_TAG}
            fi
            echo "export DATESTAMP=$(date +%Y%m%d)" >> env-vars
            echo "export IMAGE_TAG=${IMAGE_TAG}" >> env-vars
            echo "export MAJOR_VERSION=${MAJOR_VERSION}" >> env-vars
            cat env-vars >> ${BASH_ENV} && source ${BASH_ENV}
      - run:
          name: Build Docker image
          command: docker build -t ${IMAGE_NAME}:sandbox-${DATESTAMP} .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar ${IMAGE_NAME}:sandbox-${DATESTAMP}
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
            - ./env-vars
  docker-sysdig-scan:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Set Environment Variables
          command: cat /tmp/workspace/env-vars >> ${BASH_ENV} && source ${BASH_ENV}
      - run:
          name: Authenticate to Docker Hub
          command: echo ${DOCKERHUB_PASS} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
      - run:
          name: Load Archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub as Sandbox
          command: docker push ${IMAGE_NAME}:sandbox-${DATESTAMP}
      - run:
          name: Scan Sandbox Image
          command: docker run -e IMAGE_TO_SCAN=${IMAGE_NAME}:sandbox-${DATESTAMP} -e SYSDIG_SECURE_TOKEN=${SYSDIG_SECURE_TOKEN} logdna/sysdigsecure
  docker-hub-upload:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Set Environment Variables
          command: cat /tmp/workspace/env-vars >> ${BASH_ENV} && source ${BASH_ENV}
      - run:
          name: Authenticate to Docker Hub
          command: echo ${DOCKERHUB_PASS} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
      - run:
          name: Load Archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Tag and Push Docker Image to Docker Hub
          command: |
            TAGS=( latest ${IMAGE_TAG} ${IMAGE_TAG}-${DATESTAMP} )
            for TAG in ${TAGS[@]}; do
              docker tag ${IMAGE_NAME}:sandbox-${DATESTAMP} ${IMAGE_NAME}:${TAG}
              docker push ${IMAGE_NAME}:${TAG}
            done
  ibm-registry-upload:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Set Environment Variables
          command: cat /tmp/workspace/env-vars >> ${BASH_ENV} && source ${BASH_ENV}
      - run:
          name: Authenticate to IBM Container Registry
          command: echo ${IBM_API_KEY} | docker login -u iamapikey --password-stdin icr.io
      - run:
          name: Load Archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Tag and Push Docker Image to Docker Hub
          command: |
            TAGS=( latest ${IMAGE_TAG} ${IMAGE_TAG}-${DATESTAMP} )
            for TAG in ${TAGS[@]}; do
              docker tag ${IMAGE_NAME}:sandbox-${DATESTAMP} ${ICR_IMAGE_NAME}:${TAG}
              docker push ${ICR_IMAGE_NAME}:${TAG}
            done
workflows:
  version: 2
  test:
    jobs:
      - test
  publish-image:
    jobs:
      - test:
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - image-build:
          requires:
            - test
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - docker-sysdig-scan:
          requires:
            - image-build
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - docker-hub-upload:
          requires:
            - docker-sysdig-scan
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - ibm-registry-upload:
          type: approval
          requires:
            - docker-sysdig-scan
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
  monthly-build:
    triggers:
      - schedule:
          cron: "0 0 9 * *"
          filters:
            branches:
              only: master
    jobs:
      - test
      - image-build:
          requires:
            - test
      - docker-sysdig-scan:
          requires:
            - image-build
      - docker-hub-upload:
          type: approval
          requires:
            - docker-sysdig-scan
      - ibm-registry-upload:
          requires:
            - docker-hub-upload
